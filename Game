#-------global variable----




#Game board

board = ["-","-","-",

         "-","-","-",

         "-","-","-"]




#if game is till going

game_still_going =  True




#who won? or tie?

winner= None




#whos turn?

current_player = "x"




def display_board():

    print(board[0] + " | " + board[1] + " | " + board[2])

    print(board[3] + " | " + board[4] + " | " + board[5])

    print(board[6] + " | " + board[7] + " | " + board[8])

#play a game of tic tac toe

def play_game():




  #display initial board

  display_board()




  #while the game is still going

  while game_still_going:

      #handle the single turn of a palyer

      handle_turn(current_player)




      #check if the game has ended

      check_if_game_over()




      #flip to the other player

      flip_player()




  #the game has ended

  if winner == "x" or winner == "o":

      print(winner + " won!")

  elif winner == None:

      print("Tie.")




#handle a single turn

def handle_turn(player):




    print(player + "'s turn.")

    position = input("choose a position from 1-9: ")




    valid = False

    while not valid:




      while position not in ["1", "2", "3", "4","5","6","7","8","9"]:

        position = input(" Choose a position from 1-9: ")







      position=int(position)-1




      if board[position] == "-":

          valid = True

      else:

        print("you cant go there. Go again")










    board[position] = player




    display_board()




def check_if_game_over():

    check_for_winner()

    check_if_tie()




def check_for_winner():




    #set up global winner

    global winner

    #check rows

    row_winner = check_rows()

    #check coloumns

    coloumn_winner = check_coloumns()

    #check diagonals

    diagonal_winner = check_diagonals()

    if row_winner:

        winner = row_winner




    elif coloumn_winner:

        winner = coloumn_winner




    elif  diagonal_winner:

        winner= diagonal_winner

    else:

        winner = None




    return




def check_rows():

    #set up global variable

    global game_still_going

    #check if anmy of the rows have same value

    row_1= board[0]==board[1]==board[2] != "-"

    row_2 = board[3] == board[4] == board[5] != "-"

    row_3 = board[6] == board[7] == board[8] != "-"

    #if any rows does have match flag that theres a win

    if row_1 or row_2 or row_3:

        game_still_going = False

        #return the winner x or o

    if row_1:

        return board[0]

    if row_2:

        return board[3]

    if row_3:

        return  board[6]

    return







def check_coloumns():

    # set up global variable

    global game_still_going

    # check if any of the coloumns have same value

    coloumns_1 = board[0] == board[3] == board[6] != "-"

    coloumns_2 = board[1] == board[4] == board[7] != "-"

    coloumns_3 = board[2] == board[5] == board[8] != "-"

    # if any coloumns does have match flag that theres a win

    if coloumns_1 or coloumns_2 or coloumns_3:

        game_still_going = False

        # return the winner x or o

    if coloumns_1:

        return board[0]

    if coloumns_2:

        return board[1]

    if coloumns_3:

        return board[2]

    return




def check_diagonals():

    # set up global variable

    global game_still_going

    # check if any of the diagoanls have same value

    diagoanls_1 = board[0] == board[4] == board[8] != "-"

    diagoanls_2 = board[6] == board[4] == board[2] != "-"

    # if any diagoanls does have match flag that theres a win

    if diagoanls_1 or diagoanls_2:

        game_still_going = False

        # return the winner x or o

    if diagoanls_1:

        return board[0]

    elif diagoanls_2:

        return board[6]

    return




def check_if_tie():

    global game_still_going

    if "-" not in board:

        game_still_going = False

    return







def flip_player():




    global current_player

    #if the current player wa x, then change it to o

    if current_player == "x":

        current_player = "o"

        # if the current player wa o, then change it to x

    elif current_player == "o":

        current_player="x"

    return







play_game()



















'''

board

display board

play game

handle turn

check win

check rows

check coloumns

check diagonals

check tie

flip player

'''
